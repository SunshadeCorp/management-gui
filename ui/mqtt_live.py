# Form implementation generated from reading ui file 'mqtt_live.ui'
#
# Created by: PyQt6 UI code generator 6.6.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(642, 309)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.moduleBox = QtWidgets.QGroupBox(parent=self.centralwidget)
        self.moduleBox.setObjectName("moduleBox")
        self.moduleBoxLayout = QtWidgets.QGridLayout(self.moduleBox)
        self.moduleBoxLayout.setObjectName("moduleBoxLayout")
        self.gridLayout.addWidget(self.moduleBox, 1, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.gridLayout.addItem(spacerItem, 2, 0, 1, 1)
        self.canBox = QtWidgets.QGroupBox(parent=self.centralwidget)
        self.canBox.setObjectName("canBox")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.canBox)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.gridLayout.addWidget(self.canBox, 0, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout.addItem(spacerItem1, 0, 1, 2, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 642, 21))
        self.menubar.setObjectName("menubar")
        self.menuactions = QtWidgets.QMenu(parent=self.menubar)
        self.menuactions.setObjectName("menuactions")
        self.menuwindow = QtWidgets.QMenu(parent=self.menubar)
        self.menuwindow.setObjectName("menuwindow")
        self.menushow = QtWidgets.QMenu(parent=self.menubar)
        self.menushow.setObjectName("menushow")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionrestart_all = QtGui.QAction(parent=MainWindow)
        self.actionrestart_all.setObjectName("actionrestart_all")
        self.actionmaster_info = QtGui.QAction(parent=MainWindow)
        self.actionmaster_info.setObjectName("actionmaster_info")
        self.actionhidden = QtGui.QAction(parent=MainWindow)
        self.actionhidden.setCheckable(True)
        self.actionhidden.setObjectName("actionhidden")
        self.actionauto_resize = QtGui.QAction(parent=MainWindow)
        self.actionauto_resize.setCheckable(True)
        self.actionauto_resize.setObjectName("actionauto_resize")
        self.actionuptime = QtGui.QAction(parent=MainWindow)
        self.actionuptime.setCheckable(True)
        self.actionuptime.setObjectName("actionuptime")
        self.actionbuild_timestamp = QtGui.QAction(parent=MainWindow)
        self.actionbuild_timestamp.setCheckable(True)
        self.actionbuild_timestamp.setObjectName("actionbuild_timestamp")
        self.actiondelete_offline = QtGui.QAction(parent=MainWindow)
        self.actiondelete_offline.setObjectName("actiondelete_offline")
        self.actiondelete_no_slave_mapping = QtGui.QAction(parent=MainWindow)
        self.actiondelete_no_slave_mapping.setObjectName("actiondelete_no_slave_mapping")
        self.actionota_update_all = QtGui.QAction(parent=MainWindow)
        self.actionota_update_all.setObjectName("actionota_update_all")
        self.actionread_accurate_all = QtGui.QAction(parent=MainWindow)
        self.actionread_accurate_all.setObjectName("actionread_accurate_all")
        self.actionbalancing_enabled = QtGui.QAction(parent=MainWindow)
        self.actionbalancing_enabled.setCheckable(True)
        self.actionbalancing_enabled.setObjectName("actionbalancing_enabled")
        self.actiondark_mode = QtGui.QAction(parent=MainWindow)
        self.actiondark_mode.setCheckable(True)
        self.actiondark_mode.setChecked(True)
        self.actiondark_mode.setObjectName("actiondark_mode")
        self.actiongenerate_slave_mapping = QtGui.QAction(parent=MainWindow)
        self.actiongenerate_slave_mapping.setObjectName("actiongenerate_slave_mapping")
        self.actionreset_can_limits = QtGui.QAction(parent=MainWindow)
        self.actionreset_can_limits.setObjectName("actionreset_can_limits")
        self.menuactions.addAction(self.actionread_accurate_all)
        self.menuactions.addAction(self.actionbalancing_enabled)
        self.menuactions.addAction(self.actionrestart_all)
        self.menuactions.addAction(self.actiondelete_offline)
        self.menuactions.addAction(self.actiondelete_no_slave_mapping)
        self.menuactions.addAction(self.actionota_update_all)
        self.menuactions.addAction(self.actionreset_can_limits)
        self.menuactions.addSeparator()
        self.menuactions.addAction(self.actiongenerate_slave_mapping)
        self.menuwindow.addAction(self.actionmaster_info)
        self.menushow.addAction(self.actionhidden)
        self.menushow.addAction(self.actionuptime)
        self.menushow.addAction(self.actionbuild_timestamp)
        self.menushow.addSeparator()
        self.menushow.addAction(self.actionauto_resize)
        self.menushow.addAction(self.actiondark_mode)
        self.menubar.addAction(self.menuactions.menuAction())
        self.menubar.addAction(self.menuwindow.menuAction())
        self.menubar.addAction(self.menushow.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Connecting..."))
        self.moduleBox.setTitle(_translate("MainWindow", "modules"))
        self.canBox.setTitle(_translate("MainWindow", "can"))
        self.menuactions.setTitle(_translate("MainWindow", "actions"))
        self.menuwindow.setTitle(_translate("MainWindow", "window"))
        self.menushow.setTitle(_translate("MainWindow", "show"))
        self.actionrestart_all.setText(_translate("MainWindow", "restart_all"))
        self.actionmaster_info.setText(_translate("MainWindow", "master_info"))
        self.actionhidden.setText(_translate("MainWindow", "hidden"))
        self.actionauto_resize.setText(_translate("MainWindow", "auto_resize"))
        self.actionuptime.setText(_translate("MainWindow", "uptime"))
        self.actionbuild_timestamp.setText(_translate("MainWindow", "build_timestamp"))
        self.actiondelete_offline.setText(_translate("MainWindow", "delete_offline"))
        self.actiondelete_no_slave_mapping.setText(_translate("MainWindow", "delete_no_slave_mapping"))
        self.actionota_update_all.setText(_translate("MainWindow", "ota_update_all"))
        self.actionread_accurate_all.setText(_translate("MainWindow", "read_accurate_all"))
        self.actionbalancing_enabled.setText(_translate("MainWindow", "balancing_enabled"))
        self.actiondark_mode.setText(_translate("MainWindow", "dark_mode"))
        self.actiongenerate_slave_mapping.setText(_translate("MainWindow", "generate_slave_mapping"))
        self.actionreset_can_limits.setText(_translate("MainWindow", "reset_can_limits"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
